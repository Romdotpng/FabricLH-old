package lavahack.client.features.module.modules.exploit

import lavahack.client.features.module.Module
import lavahack.client.features.subsystem.subsystems.timer
import lavahack.client.settings.Setting
import lavahack.client.settings.types.SettingNumber
import lavahack.client.utils.Stopwatch
import lavahack.client.utils.client.interfaces.impl.moveListener
import lavahack.client.utils.client.interfaces.impl.receiveListener
import lavahack.client.utils.client.interfaces.impl.register
import lavahack.client.utils.distanceSq
import net.minecraft.entity.EntityType
import net.minecraft.network.packet.s2c.play.EntitySpawnS2CPacket
import net.minecraft.util.math.Vec3d

@Module.Info(
    name = "PeekAssist",
    description = "Oldfashion's stuff",
    category = Module.Category.EXPLOIT
)
class PeekAssist : Module() {
    init {
        val yDiff = register(SettingNumber("Y Diff", 0.4f, 0.1f..1.2f))
        val offset = register(SettingNumber("Offset", 8f, 0f..16f))
        val delay = register(SettingNumber("Delay", 1000L, 0L..5000L))
        val crystal = register(Setting("Crystal", false))
        val useTimer = register(Setting("Use Timer", false))

        val stopwatch = Stopwatch()

        var initY = 0.0
        var flag = false

        moveListener {
            if(mc.player!!.isOnGround) {
                timer = 1
                initY = mc.player!!.y
                flag = false

                if(stopwatch.passed(delay.value, true)) {
                    mc.player!!.jump()

                    it.y = mc.player!!.velocity.y
                }
            } else if(mc.player!!.y >= initY + yDiff.value || flag) {
                if(useTimer.value) {
                    timer = offset.value
                } else {
                    it.y = -offset.value
                }
            }
        }

        receiveListener {
            if(crystal.value) {
                when(it.packet) {
                    is EntitySpawnS2CPacket -> {
                        if(it.packet.entityType == EntityType.END_CRYSTAL) {
                            val vec = Vec3d(it.packet.x, it.packet.y, it.packet.z)

                            if(mc.player!!.pos distanceSq vec <= 36) {
                                flag = true
                            }
                        }
                    }
                }
            }
        }
    }
}