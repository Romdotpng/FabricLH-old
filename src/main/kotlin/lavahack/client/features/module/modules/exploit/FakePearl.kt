package lavahack.client.features.module.modules.exploit

import lavahack.client.features.module.Module
import lavahack.client.utils.client.interfaces.impl.receiveListener
import lavahack.client.utils.client.interfaces.impl.sendListener
import lavahack.client.utils.client.interfaces.impl.tickListener
import net.minecraft.entity.EntityType
import net.minecraft.entity.projectile.thrown.EnderPearlEntity
import net.minecraft.network.packet.Packet
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket
import net.minecraft.network.packet.s2c.play.EntitySpawnS2CPacket
import java.util.concurrent.ConcurrentLinkedQueue

/**
 * @author _kisman_
 * @since 13:27 of 28.07.2023
 */
@Module.Info(
    name = "FakePearl",
    description = "Ignores pearl throwing",
    category = Module.Category.EXPLOIT
)
class FakePearl : Module() {
    init {
        val packets = ConcurrentLinkedQueue<Packet<*>>()
        var id = -1

        tickListener {
            if(mc.player == null || mc.world == null) {
                return@tickListener
            }

            if(id != -1) {
                for(entity in mc.world!!.entities) {
                    if(entity.id == id && entity is EnderPearlEntity) {
                        id = -1
                    }
                }
            } else if(packets.isNotEmpty()) {
                do {
                    mc.networkHandler!!.sendPacket(packets.poll())
                } while(packets.isNotEmpty())
            }
        }

        sendListener {
            if(id != -1 && it.packet is PlayerMoveC2SPacket) {
                packets.add(it.packet)
            }
        }

        receiveListener { it0 ->
            if(mc.player!!.isOnGround) {
                if(it0.packet is EntitySpawnS2CPacket && it0.packet.entityType == EntityType.ENDER_PEARL) {
                    mc.world!!.players.stream().min(Comparator.comparingDouble { it1 ->
                        it1.squaredDistanceTo(
                            it0.packet.x,
                            it0.packet.y,
                            it0.packet.z
                        )
                    }).ifPresent { _ ->
                        mc.player!!.setVelocity(0.0, 0.0, 0.0)
                        mc.player!!.input.movementForward = 0f
                        mc.player!!.input.movementSideways = 0f
                        mc.networkHandler!!.sendPacket(PlayerMoveC2SPacket.PositionAndOnGround(
                            mc.player!!.x,
                            mc.player!!.y + 1,
                            mc.player!!.z,
                            false
                        ))

                        id = it0.packet.id
                    }
                }
            }
        }
    }
}